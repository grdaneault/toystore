package com.gjd.UI.Admin;

import java.sql.Time;

import com.gjd.model.DatabaseObjects.Store;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Container;
import com.vaadin.data.util.IndexedContainer;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Component;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Field;
import com.vaadin.ui.FormLayout;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.ListSelect;
import com.vaadin.ui.Table;
import com.vaadin.ui.TableFieldFactory;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

public class StoreManager extends VerticalLayout implements TableFieldFactory {

	private static final long serialVersionUID = 2505327117442756951L;
	
	private Label storeTitle;
	private Table hours;

	private Store store;
	
	public StoreManager(Store store) {
		this.store = store;
		buildMainLayout();
	}

	
	@SuppressWarnings("unchecked")
	private void buildMainLayout() {
		storeTitle = new Label(store.getName());
		addComponent(storeTitle);

		Container storeHourContainer = new IndexedContainer();
		storeHourContainer.addContainerProperty("day", String.class, "");
		storeHourContainer.addContainerProperty("open", String.class, "8:00 AM");
		storeHourContainer.addContainerProperty("close", String.class, "5:00 PM");
		
		Object mon = storeHourContainer.addItem();
		storeHourContainer.getItem(mon).getItemProperty("day").setValue("Monday");
		Object tue = storeHourContainer.addItem();
		storeHourContainer.getItem(tue).getItemProperty("day").setValue("Tuesday");
		Object wed = storeHourContainer.addItem();
		storeHourContainer.getItem(wed).getItemProperty("day").setValue("Wednesday");
		
		hours = new Table("Hours", storeHourContainer);
		hours.setSelectable(true);
		hours.setTableFieldFactory(this);
		hours.setEditable(true);
		addComponent(hours);
		addComponent(new AddressManager(store.getAddress()));
		
	}


	@Override
	public Field<?> createField(Container container, Object itemId,
			Object propertyId, Component uiContext) {
		TextField field = new TextField((String)propertyId);
		field.setData(itemId);
		System.out.println(!(hours.getValue() != null && hours.getValue().equals(itemId)));
		field.setReadOnly(!(hours.getValue() != null && hours.getValue().equals(itemId)));
		return field;
	}
}
